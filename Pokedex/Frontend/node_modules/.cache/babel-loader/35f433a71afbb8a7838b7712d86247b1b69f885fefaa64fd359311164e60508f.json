{"ast":null,"code":"var _jsxFileName = \"/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/TeamAccordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TeamAccordion(_ref) {\n  _s();\n  let {\n    getSpriteURL,\n    error,\n    setError\n  } = _ref;\n  const [teams, setTeams] = useState(getAllTeams());\n  const getAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      error = e.message;\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"1\",\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: team.id,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: [\"Team '\", team.name, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: team.members.map(member => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSpriteURL(member.species),\n            alt: pokemon.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TeamAccordion, \"OVLM4hB5U73VeO6ym2LEyNZ/c60=\");\n_c = TeamAccordion;\nexport default TeamAccordion;\nvar _c;\n$RefreshReg$(_c, \"TeamAccordion\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamAccordion","_ref","_s","getSpriteURL","error","setError","teams","setTeams","getAllTeams","response","fetch","ok","Error","status","json","e","message","children","Accordion","defaultActiveKey","map","team","Item","eventKey","id","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","members","member","src","species","alt","pokemon","_c","$RefreshReg$"],"sources":["/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/TeamAccordion.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction TeamAccordion({ getSpriteURL, error, setError }) {\n  const [teams, setTeams] = useState(getAllTeams());\n\n  const getAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      error = e.message;\n      setError(error);\n    }\n  };\n\n  return (\n    <>\n      <Accordion defaultActiveKey='1'>\n        {teams.map((team) => (\n          <Accordion.Item eventKey={team.id}>\n            <Accordion.Header>Team '{team.name}'</Accordion.Header>\n            <Accordion.Body>\n              {team.members.map((member) => (\n                <img src={getSpriteURL(member.species)} alt={pokemon.species} />\n              ))}\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n    </>\n  );\n}\n\nexport default TeamAccordion;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,aAAaA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACtD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,WAAW,EAAE,CAAC;EAEjD,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,kBAAiBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MACtD;MACA,MAAMP,KAAK,GAAG,MAAMG,QAAQ,CAACK,IAAI,EAAE;MACnCP,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,OAAOS,CAAC,EAAE;MACVX,KAAK,GAAGW,CAAC,CAACC,OAAO;MACjBX,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACqB,SAAS;MAACC,gBAAgB,EAAC,GAAG;MAAAF,QAAA,EAC5BX,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdxB,OAAA,CAACqB,SAAS,CAACI,IAAI;QAACC,QAAQ,EAAEF,IAAI,CAACG,EAAG;QAAAP,QAAA,gBAChCpB,OAAA,CAACqB,SAAS,CAACO,MAAM;UAAAR,QAAA,GAAC,QAAM,EAACI,IAAI,CAACK,IAAI,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAmB,eACvDjC,OAAA,CAACqB,SAAS,CAACa,IAAI;UAAAd,QAAA,EACZI,IAAI,CAACW,OAAO,CAACZ,GAAG,CAAEa,MAAM,iBACvBpC,OAAA;YAAKqC,GAAG,EAAE/B,YAAY,CAAC8B,MAAM,CAACE,OAAO,CAAE;YAACC,GAAG,EAAEC,OAAO,CAACF;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC9D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACa;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACQ,iBACX;AAEP;AAAC5B,EAAA,CAjCQF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAmCtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}