{"ast":null,"code":"var _jsxFileName = \"/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/TeamAccordion.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TeamAccordion(_ref) {\n  _s();\n  let {\n    getSpriteURL,\n    error,\n    setError\n  } = _ref;\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    getAllTeams();\n  }, []);\n  const getAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      error = e.message;\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"1\",\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: team.id,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: [\"Team '\", team.name, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: team.members.map(member => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getSpriteURL(member.species),\n              alt: member.species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this))\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TeamAccordion, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = TeamAccordion;\nexport default TeamAccordion;\nvar _c;\n$RefreshReg$(_c, \"TeamAccordion\");","map":{"version":3,"names":["useState","useEffect","Accordion","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamAccordion","_ref","_s","getSpriteURL","error","setError","teams","setTeams","getAllTeams","response","fetch","ok","Error","status","json","e","message","children","defaultActiveKey","map","team","Item","eventKey","id","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","members","member","src","species","alt","_c","$RefreshReg$"],"sources":["/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/TeamAccordion.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\n\nfunction TeamAccordion({ getSpriteURL, error, setError }) {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    getAllTeams();\n  }, []);\n\n  const getAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      error = e.message;\n      setError(error);\n    }\n  };\n\n  return (\n    <>\n      <Accordion defaultActiveKey='1'>\n        {teams.map((team) => (\n          <Accordion.Item eventKey={team.id}>\n            <Accordion.Header>Team '{team.name}'</Accordion.Header>\n            <Accordion.Body>\n              <div key={team.id}>\n                {team.members.map((member) => (\n                  <img\n                    src={getSpriteURL(member.species)}\n                    alt={member.species}\n                  />\n                ))}\n              </div>\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n    </>\n  );\n}\n\nexport default TeamAccordion;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,aAAaA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACtD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdc,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,kBAAiBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MACtD;MACA,MAAMP,KAAK,GAAG,MAAMG,QAAQ,CAACK,IAAI,EAAE;MACnCP,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,OAAOS,CAAC,EAAE;MACVX,KAAK,GAAGW,CAAC,CAACC,OAAO;MACjBX,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACF,SAAS;MAACuB,gBAAgB,EAAC,GAAG;MAAAD,QAAA,EAC5BX,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdvB,OAAA,CAACF,SAAS,CAAC0B,IAAI;QAACC,QAAQ,EAAEF,IAAI,CAACG,EAAG;QAAAN,QAAA,gBAChCpB,OAAA,CAACF,SAAS,CAAC6B,MAAM;UAAAP,QAAA,GAAC,QAAM,EAACG,IAAI,CAACK,IAAI,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAmB,eACvDhC,OAAA,CAACF,SAAS,CAACmC,IAAI;UAAAb,QAAA,eACbpB,OAAA;YAAAoB,QAAA,EACGG,IAAI,CAACW,OAAO,CAACZ,GAAG,CAAEa,MAAM,iBACvBnC,OAAA;cACEoC,GAAG,EAAE9B,YAAY,CAAC6B,MAAM,CAACE,OAAO,CAAE;cAClCC,GAAG,EAAEH,MAAM,CAACE;YAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEvB;UAAC,GANMT,IAAI,CAACG,EAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAOX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACQ,iBACX;AAEP;AAAC3B,EAAA,CA1CQF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}