{"ast":null,"code":"var _s = $RefreshSig$();\nconst TeamAPI = () => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState('');\n  const createTeam = async team => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(team)\n      });\n      console.log(response);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  const findAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  const updateTeam = async team => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/v1/teams/${team.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(team)\n      });\n      console.log(response);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  const deleteTeamById = async teamId => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/v1/teams/${teamId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const newTeams = teams.filter(t => t.id !== teamId);\n      setTeams(newTeams);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  const deleteAllTeams = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/v1/teams`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const newTeams = [];\n      setTeams(newTeams);\n    } catch (error) {\n      alert(e.message);\n    }\n  };\n};\n_s(TeamAPI, \"alhECkKYdTOu7f+mnBeF+AQiYvM=\");\n_c = TeamAPI;\nvar _c;\n$RefreshReg$(_c, \"TeamAPI\");","map":{"version":3,"names":["TeamAPI","_s","teams","setTeams","useState","error","setError","createTeam","team","response","fetch","method","headers","body","JSON","stringify","console","log","e","alert","message","findAllTeams","ok","Error","status","json","updateTeam","id","deleteTeamById","teamId","newTeams","filter","t","deleteAllTeams","_c","$RefreshReg$"],"sources":["/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/APIs/TeamAPI.js"],"sourcesContent":["const TeamAPI = () => {\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState('');\n\n  const createTeam = async (team) => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(team),\n      });\n      console.log(response);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const findAllTeams = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/v1/teams');\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const teams = await response.json();\n      setTeams(teams);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const updateTeam = async (team) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/api/v1/teams/${team.id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(team),\n        }\n      );\n      console.log(response);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const deleteTeamById = async (teamId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/api/v1/teams/${teamId}`,\n        {\n          method: 'DELETE',\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const newTeams = teams.filter((t) => t.id !== teamId);\n      setTeams(newTeams);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const deleteAllTeams = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/v1/teams`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n      const newTeams = [];\n      setTeams(newTeams);\n    } catch (error) {\n      alert(e.message);\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}