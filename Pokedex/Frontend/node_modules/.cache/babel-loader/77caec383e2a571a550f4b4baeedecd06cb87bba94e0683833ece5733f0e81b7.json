{"ast":null,"code":"var _jsxFileName = \"/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/UpdateModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport TeamForm from './TeamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateModal = _ref => {\n  _s();\n  let {\n    id,\n    team,\n    setError,\n    pokemons,\n    teams,\n    setTeams\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => {\n    updateTeam(protoTeamBuilder(team), id);\n    setShow(false);\n  };\n  const updateTeam = async (team, id) => {\n    try {\n      const updatedTeam = await fetch(`http://localhost:8080/api/v1/teams/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(team)\n      });\n      const newTeams = teams.filter(t => t.id !== id);\n      setTeams(newTeams.push(updatedTeam));\n    } catch (e) {\n      setError(e);\n    }\n  };\n  const protoTeamBuilder = () => {\n    const newTeamMembers = [];\n    const speciesToRemoveArray = inputState.speciesToRemove.split(',');\n    const SpeciesToAddArray = inputState.speciesToAdd.split(',');\n    team.members.forEach(member => {\n      speciesToRemoveArray.forEach(species => {\n        if (member.species !== species.toUpperCase()) {\n          newTeamMembers.push(member);\n        }\n      });\n    });\n    SpeciesToAddArray.forEach(species => {\n      pokemons.forEach(pokemon => {\n        if (pokemon.species === species.toUpperCase()) {\n          newTeamMembers.push(pokemon);\n        }\n      });\n    });\n    const newTeam = {\n      name: inputState.name !== '' ? inputState.name : team.name,\n      members: newTeamMembers\n    };\n    console.log(newTeam);\n    return newTeam;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      className: \"d-flex justify-content-between m-2\",\n      variant: \"primary\",\n      id: \"delete\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-gear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TeamForm, {\n          pokemons: pokemons,\n          teams: teams,\n          setError: setError,\n          setTeams: setTeams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = UpdateModal;\nexport default UpdateModal;\nvar _c;\n$RefreshReg$(_c, \"UpdateModal\");","map":{"version":3,"names":["React","useState","Button","Modal","TeamForm","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateModal","_ref","_s","id","team","setError","pokemons","teams","setTeams","show","setShow","handleShow","handleClose","updateTeam","protoTeamBuilder","updatedTeam","fetch","method","headers","body","JSON","stringify","newTeams","filter","t","push","e","newTeamMembers","speciesToRemoveArray","inputState","speciesToRemove","split","SpeciesToAddArray","speciesToAdd","members","forEach","member","species","toUpperCase","pokemon","newTeam","name","console","log","children","onClick","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","onHide","Body","Footer","_c","$RefreshReg$"],"sources":["/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/UpdateModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport TeamForm from './TeamForm';\n\nconst UpdateModal = ({ id, team, setError, pokemons, teams, setTeams }) => {\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => {\n    updateTeam(protoTeamBuilder(team), id);\n    setShow(false);\n  };\n\n  const updateTeam = async (team, id) => {\n    try {\n      const updatedTeam = await fetch(\n        `http://localhost:8080/api/v1/teams/${id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(team),\n        }\n      );\n      const newTeams = teams.filter((t) => t.id !== id);\n      setTeams(newTeams.push(updatedTeam));\n    } catch (e) {\n      setError(e);\n    }\n  };\n\n  const protoTeamBuilder = () => {\n    const newTeamMembers = [];\n    const speciesToRemoveArray = inputState.speciesToRemove.split(',');\n    const SpeciesToAddArray = inputState.speciesToAdd.split(',');\n\n    team.members.forEach((member) => {\n      speciesToRemoveArray.forEach((species) => {\n        if (member.species !== species.toUpperCase()) {\n          newTeamMembers.push(member);\n        }\n      });\n    });\n\n    SpeciesToAddArray.forEach((species) => {\n      pokemons.forEach((pokemon) => {\n        if (pokemon.species === species.toUpperCase()) {\n          newTeamMembers.push(pokemon);\n        }\n      });\n    });\n\n    const newTeam = {\n      name: inputState.name !== '' ? inputState.name : team.name,\n      members: newTeamMembers,\n    };\n    console.log(newTeam);\n    return newTeam;\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        className='d-flex justify-content-between m-2'\n        variant='primary'\n        id='delete'>\n        <i className='fa fa-gear' />\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n          <TeamForm\n            pokemons={pokemons}\n            teams={teams}\n            setError={setError}\n            setTeams={setTeams}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='primary' onClick={handleClose}>\n            Update\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,WAAW,GAAGC,IAAA,IAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,EAAE;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAP,IAAA;EACpE,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMmB,UAAU,GAAGA,CAAA,KAAMD,OAAO,CAAC,IAAI,CAAC;EAEtC,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBC,UAAU,CAACC,gBAAgB,CAACV,IAAI,CAAC,EAAED,EAAE,CAAC;IACtCO,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAOT,IAAI,EAAED,EAAE,KAAK;IACrC,IAAI;MACF,MAAMY,WAAW,GAAG,MAAMC,KAAK,CAC5B,sCAAqCb,EAAG,EAAC,EAC1C;QACEc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,IAAI;MAC3B,CAAC,CACF;MACD,MAAMkB,QAAQ,GAAGf,KAAK,CAACgB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,KAAKA,EAAE,CAAC;MACjDK,QAAQ,CAACc,QAAQ,CAACG,IAAI,CAACV,WAAW,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVrB,QAAQ,CAACqB,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAMZ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMa,cAAc,GAAG,EAAE;IACzB,MAAMC,oBAAoB,GAAGC,UAAU,CAACC,eAAe,CAACC,KAAK,CAAC,GAAG,CAAC;IAClE,MAAMC,iBAAiB,GAAGH,UAAU,CAACI,YAAY,CAACF,KAAK,CAAC,GAAG,CAAC;IAE5D3B,IAAI,CAAC8B,OAAO,CAACC,OAAO,CAAEC,MAAM,IAAK;MAC/BR,oBAAoB,CAACO,OAAO,CAAEE,OAAO,IAAK;QACxC,IAAID,MAAM,CAACC,OAAO,KAAKA,OAAO,CAACC,WAAW,EAAE,EAAE;UAC5CX,cAAc,CAACF,IAAI,CAACW,MAAM,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFJ,iBAAiB,CAACG,OAAO,CAAEE,OAAO,IAAK;MACrC/B,QAAQ,CAAC6B,OAAO,CAAEI,OAAO,IAAK;QAC5B,IAAIA,OAAO,CAACF,OAAO,KAAKA,OAAO,CAACC,WAAW,EAAE,EAAE;UAC7CX,cAAc,CAACF,IAAI,CAACc,OAAO,CAAC;QAC9B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAEZ,UAAU,CAACY,IAAI,KAAK,EAAE,GAAGZ,UAAU,CAACY,IAAI,GAAGrC,IAAI,CAACqC,IAAI;MAC1DP,OAAO,EAAEP;IACX,CAAC;IACDe,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpB,OAAOA,OAAO;EAChB,CAAC;EAED,oBACE3C,OAAA,CAAAE,SAAA;IAAA6C,QAAA,gBACE/C,OAAA,CAACJ,MAAM;MACLoD,OAAO,EAAElC,UAAW;MACpBmC,SAAS,EAAC,oCAAoC;MAC9CC,OAAO,EAAC,SAAS;MACjB5C,EAAE,EAAC,QAAQ;MAAAyC,QAAA,eACX/C,OAAA;QAAGiD,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,eAETtD,OAAA,CAACH,KAAK;MAACe,IAAI,EAAEA,IAAK;MAAC2C,MAAM,EAAExC,WAAY;MAAAgC,QAAA,gBACrC/C,OAAA,CAACH,KAAK,CAAC2D,IAAI;QAAAT,QAAA,eACT/C,OAAA,CAACF,QAAQ;UACPW,QAAQ,EAAEA,QAAS;UACnBC,KAAK,EAAEA,KAAM;UACbF,QAAQ,EAAEA,QAAS;UACnBG,QAAQ,EAAEA;QAAS;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACS,eACbtD,OAAA,CAACH,KAAK,CAAC4D,MAAM;QAAAV,QAAA,eACX/C,OAAA,CAACJ,MAAM;UAACsD,OAAO,EAAC,SAAS;UAACF,OAAO,EAAEjC,WAAY;UAAAgC,QAAA,EAAC;QAEhD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAAA,gBACP;AAEP,CAAC;AAACjD,EAAA,CApFIF,WAAW;AAAAuD,EAAA,GAAXvD,WAAW;AAsFjB,eAAeA,WAAW;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}