{"ast":null,"code":"export const createTeam = async team => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/teams', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(team)\n    });\n    return response;\n  } catch (e) {\n    alert(e.message);\n  }\n};\nexport const findAllTeams = async () => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/teams');\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n    const teams = await response.json();\n    return teams;\n  } catch (e) {\n    alert(e.message);\n  }\n};\nexport const updateTeam = async (team, id) => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/v1/teams/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(team)\n    });\n    return response;\n  } catch (e) {\n    alert(e.message);\n  }\n};\nexport const deleteTeamById = async teamId => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/v1/teams/${teamId}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n  } catch (e) {\n    alert(e.message);\n  }\n};\nexport const deleteAllTeams = async () => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/v1/teams`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n  } catch (e) {\n    alert(e.message);\n  }\n};","map":{"version":3,"names":["createTeam","team","response","fetch","method","headers","body","JSON","stringify","e","alert","message","findAllTeams","ok","Error","status","teams","json","updateTeam","id","deleteTeamById","teamId","deleteAllTeams"],"sources":["/Users/luca/IdeaProjects/Pokedex/Frontend/pokedex-app/src/components/APIs/TeamAPI.js"],"sourcesContent":["export const createTeam = async (team) => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/teams', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(team),\n    });\n    return response;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\nexport const findAllTeams = async () => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/teams');\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n    const teams = await response.json();\n    return teams;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\nexport const updateTeam = async (team, id) => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/v1/teams/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(team),\n    });\n    return response;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\nexport const deleteTeamById = async (teamId) => {\n  try {\n    const response = await fetch(\n      `http://localhost:8080/api/v1/teams/${teamId}`,\n      {\n        method: 'DELETE',\n      }\n    );\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\nexport const deleteAllTeams = async () => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/v1/teams`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n  } catch (e) {\n    alert(e.message);\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOO,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAClE,IAAI,CAACD,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,kBAAiBZ,QAAQ,CAACa,MAAO,EAAC,CAAC;IACtD;IACA,MAAMC,KAAK,GAAG,MAAMd,QAAQ,CAACe,IAAI,EAAE;IACnC,OAAOD,KAAK;EACd,CAAC,CAAC,OAAOP,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOjB,IAAI,EAAEkB,EAAE,KAAK;EAC5C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCgB,EAAG,EAAC,EAAE;MACvEf,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOO,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCkB,MAAO,EAAC,EAC9C;MACEjB,MAAM,EAAE;IACV,CAAC,CACF;IACD,IAAI,CAACF,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,kBAAiBZ,QAAQ,CAACa,MAAO,EAAC,CAAC;IACtD;EACF,CAAC,CAAC,OAAON,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACF,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,kBAAiBZ,QAAQ,CAACa,MAAO,EAAC,CAAC;IACtD;EACF,CAAC,CAAC,OAAON,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}